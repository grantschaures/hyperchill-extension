{"version":3,"file":"login.js","mappings":"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","sources":["webpack://hyperchill-website-blocker/./src/login.ts","webpack://hyperchill-website-blocker/webpack/before-startup","webpack://hyperchill-website-blocker/webpack/startup","webpack://hyperchill-website-blocker/webpack/after-startup"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Get button and input elements\r\n    const loginSubmitBtn = document.getElementById(\"loginSubmitBtn\") as HTMLButtonElement;\r\n    const emailInput = document.getElementById(\"emailInputSignin\") as HTMLInputElement;\r\n    const passwordInput = document.getElementById(\"passwordInput\") as HTMLInputElement;\r\n\r\n    // Add event listener to the login button\r\n    loginSubmitBtn.addEventListener(\"click\", async () => {\r\n        const email = emailInput.value;\r\n        const password = passwordInput.value;\r\n\r\n        if (isValidEmail(email)) {\r\n            await addUser(email, password);\r\n        } else {\r\n            alert(\"Invalid email address. Please try again.\");\r\n        }\r\n    });\r\n\r\n    // Add event listener for Enter key\r\n    document.addEventListener(\"keydown\", (event) => handleLoginEnter(event, loginSubmitBtn));\r\n});\r\n\r\n// Handle the Enter key for login\r\nfunction handleLoginEnter(event: KeyboardEvent, loginSubmitBtn: HTMLButtonElement): void {\r\n    if (event.key === \"Enter\" && document.activeElement?.id === \"passwordInput\") {\r\n        event.preventDefault();\r\n        loginSubmitBtn.click();\r\n    }\r\n}\r\n\r\n// Function to validate email\r\nfunction isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n}\r\n\r\n// Function to add a user\r\nasync function addUser(email: string, password: string): Promise<void> {\r\n    const user = { email, password };\r\n\r\n    try {\r\n        const response = await fetch(\"http://localhost:3000/extension/auth/validateUser\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({user})\r\n        });\r\n\r\n        if (!response.ok) {\r\n            if (response.status === 429) {\r\n                const data = await response.json();\r\n                alert(data.message);\r\n                throw new Error(`HTTP error! Status: ${response.status} - ${data.message}`);\r\n            } else {\r\n                alert(\"Your email or password is incorrect. Please try again.\");\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data.loginSuccess === true) {\r\n            alert(\"Login was successful!\"); // remove this eventually\r\n            \r\n            // Store the JWT and userEmail in Chrome's local storage\r\n            chrome.storage.local.get(\"state\", (result) => {\r\n                const state = result.state || { jwt: null, userEmail: null }; // Use the existing state or initialize a new one\r\n                state.jwt = data.token; // Update jwt\r\n                state.userEmail = data.email; // Update userEmail\r\n            \r\n                chrome.storage.local.set({ state }, () => {\r\n                    console.log(\"State updated:\", state);\r\n                });\r\n            });\r\n\r\n            // take down the popup and send user's email to main execution environment\r\n            chrome.runtime.sendMessage({ type: 'INITIATE_LOGIN_PROCESS', email: data.email }, (response) => {\r\n                if (response) {\r\n                    console.log(\"Removed Login Popup\");\r\n                }\r\n            });\r\n\r\n        } else {\r\n            alert(\"An error occurred on the server. We apologize for the inconvenience. Please try again later.\");\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Error during login:\", error);\r\n    }\r\n}","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/login.ts\"]();\n",""],"names":[],"sourceRoot":""}